<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    @*jqGrid*@
    <link href="~/Content/jquery-confirm/jquery-confirm.css" rel="stylesheet" />

    <link href="~/Content/jqGrid/ui.jqgrid-bootstrap.css" rel="stylesheet" />
    <link href="~/Content/datepicker/bootstrap-datepicker3.css" rel="stylesheet" />
    <link href="~/Content/App/notificationBox.css" rel="stylesheet" />
    <link href="~/Content/App/chat.css" rel="stylesheet" />
    @*<link href="~/Content/vue/bootstrap-vue.css" rel="stylesheet" />*@

</head>
<body>
    @Html.Partial("_NavBar")
    <style>
        .chatIcon {
            background-color: blue;
            text-align: center;
            padding: 3px;
            height: 30px
        }

        .chatUserInitials {
            text-decoration: none;
        }

            .chatUserInitials:hover {
                text-decoration: none;
                color: white;
            }

        .chatUserfullName {
            display: none;
        }

        .chatUserInitials {
            color: white;
            font-size: 14px;
        }

        .chatIconsHolder::-webkit-scrollbar {
            width: 5px;
        }

        .chatIconsHolder::-webkit-scrollbar-thumb {
            /*background-color: #888;*/
            background-color: #a8a8a8;
        }

        .chatIconsHolder {
            overflow-y: auto;
            overflow-x: hidden;
            background-color: #d3d3d3;
            width: 30px;
            position: fixed;
            top: 50px;
            bottom: 49px;
            z-index: 999;
        }

        .testSpan {
            display: block;
            position: absolute;
        }
    </style>

    @*<div id="chatIconsHolder" class="chatIconsHolder"></div>*@
    @*padding mora umesto margine da se ne bi datepicker dislocirao*@
    <div class="container-fluid" style="padding-top: 50px ; padding-bottom: 60px;">
        @RenderBody()
    </div>

    <div id="testFooter">
        <hr style="margin: 0; padding-bottom: 10px" />
        <p>&copy; @DateTime.Now.Year - ЦКИСИП</p>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/jquery-confirm/jquery-confirm.js"></script>

    @*jqGrid*@
    <script src="~/Scripts/jqGrid/i18n/grid.locale-sr.js"></script>
    <script src="~/Scripts/jqGrid/jquery.jqGrid.js"></script>

    @* for column reordering *@
    <script src="~/Scripts/jquery-ui.js"></script>
    <script src="~/Scripts/jqGrid/jquery.contextmenu.js"></script>
    <script src="~/Scripts/datepicker/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/datepicker/bootstrap-datepicker.sr.min.js"></script>
    <script src="~/Scripts/bootstrap3-typeahead.js"></script>
    <script src="~/Scripts/jqGridDefaults.js"></script>
    <script src="~/Scripts/JqGridHeplers.js"></script>

    @*<script src="~/Scripts/bootstrap-select/bootstrap-select.js"></script>*@
    @*za kolumn chooser*@
    @*<script src="~/Scripts/vue/vue.js"></script>
        <script src="~/Scripts/vue/bootstrap-vue.js"></script>*@
    @*<script src="~/Scripts/vue/polyfill.min.js"></script>*@

    

    @RenderSection("scripts", required: false)

    <script src="~/Scripts/Respond/respond.js"></script>
    <script src="~/Scripts/respond.js"></script>
    <script src="~/Scripts/jquery.signalR-2.4.0.min.js"></script>
    <script src="/SignalR/hubs"></script>
    <script src="~/Scripts/chat/chat.js"></script>
    <script>
        $(document).ready(function () {
            createChatIcons($("#chatIconsHolder"));
        });

        //$.connection.hub.url = "http://localhost:8181/signalr";
        $.connection.hub.start().done(function () {
            //alert("asd");
            //$.connection.testHub.server.testMetodaServer();
            $.connection.testHub.server.pushToSpecific("testodobrava testodobrava");

        });

        $.connection.testHub.client.testMetodaKlijent = function (br) {
            //alert("testMetodaKlijent " + br);
            //$(".notificationBox").show('slide', { direction: "right" }, 200);
            realTimeNotification.push();
        }

        $.connection.testHub.client.newMessage = function () {
            chat.newMessage();
        }



        var realTimeNotification = (function () {
            var notifications = [];
            var notificationBoxHeight = 200;
            var notificationBoxWidth = 300;
            var notificationBoxBottomSpace = 5;
            var notificationBoxRightSpace = 5;
            var notificationBoxMinimumBottomValue = 50;
            var maxNotificationBoxes = 3;
            var animationTime = 200;


            //style = "bottom: 260px; right: 5px; display:none"
            const baseNotificationTemplate =
                '<div class="notificationBox" style = " right: 5px; display:none"> \
                                                                                            <div class="notificationHeader">\
                                                                                                <span class="notificationHeaderText">Notification 1</span>\
                                                                                                <button class="pull-right btn btn-xs notificationCloseButton" onclick="realTimeNotification.close(this);">x</button>\
                                                                                            </div>\
                                                                                            <div class="notificationContent">\
                                                                                                <p>aasdd</p>\
                                                                                                <p>aasdd</p>\
                                                                                                <p>aasdd</p>\
                                                                                                <p>aasdd</p>\
                                                                                                <p>aasdd</p>\
                                                                                                <p>aasdd</p>\
                                                                                                <p>aasdd</p>\
                                                                                            </div>\
                                                                                        </div>';

            var push = function () {

                var newNotification = createNewNotification();
                pushNewNotificationBoxToScreen(newNotification);

            };

            function createNewNotification() {
                var newNotification = $(baseNotificationTemplate);
                var id = Date.now();
                id = id + "_NotificationBox";
                newNotification.attr('id', id);
                return newNotification;
            }

            function pushNewNotificationBoxToScreen(newNotification) {
                removeOldestNotificationIfNeeded();
                newNotification.css('bottom', getBottomValue(0));
                notifications.unshift(newNotification);
                $('body').append(newNotification);
                adjustNotificationBoxesPosition();
                setTimeout(function () {
                    newNotification.show('slide', { direction: "right" }, animationTime);
                }, animationTime);

            }

            function removeOldestNotificationIfNeeded() {
                if (maxNotificationBoxes === notifications.length)
                    closeNotificationBox(notifications[notifications.length - 1], "right");
            }


            function getBottomValue(position) {

                var value = notificationBoxMinimumBottomValue +
                    position * notificationBoxBottomSpace +
                    notificationBoxBottomSpace +
                    position * notificationBoxHeight;

                return value + "px";
            }


            var onCloseButtonClickHandler = function (targetCloseButton) {
                var notificationBox = $(targetCloseButton).closest(".notificationBox");
                closeNotificationBox(notificationBox, "right");
                adjustNotificationBoxesPosition();
            }

            function closeNotificationBox(notificationBox, direction) {
                if (direction === null || direction === "" || direction === "undefined")
                    direction = "down";
                notificationBox.hide('slide', { direction: direction }, animationTime);

                removeNotificationBox(notificationBox);
            }

            function removeNotificationBox(notificationBox) {
                var notificationBoxId = notificationBox.attr('id');
                var index = notifications.findIndex(findNotificationById);
                notifications.splice(index, 1);
                setTimeout(function () {
                    notificationBox.remove();
                }, animationTime);

                function findNotificationById(notification) {
                    return notification.attr('id') === notificationBoxId;
                }
            }


            function adjustNotificationBoxesPosition() {
                setTimeout(function () {
                    for (var i = 0; i < notifications.length; i++) {
                        notifications[i].animate({ bottom: getBottomValue(i) }, animationTime * 2);
                    }
                }, animationTime);

            }

            return {
                push: push,
                notifications: notifications,
                close: onCloseButtonClickHandler
            }
        })();


    </script>
    <style>
        /*word break for data in colum cell*/
        .ui-jqgrid tr.jqgrow td {
            white-space: normal !important;
            height: auto;
            vertical-align: text-top;
            padding-top: 2px;
        }

        /*word break for data in colum cell*/
        th.ui-th-column div {
            white-space: normal !important;
            height: auto !important;
            padding-top: 2px;
        }

        .ui-th-column {
            padding-top: 0px !important;
            padding-bottom: 0px !important;
        }

        .ui-th-ltr {
            padding-top: 2px !important;
            padding-bottom: 2px !important;
        }
    </style>
    <img hidden id="loadingGif" src="~/Content/App/loading.gif" />

</body>
</html>
