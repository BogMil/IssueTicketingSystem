
@{
    ViewBag.Title = "Complains";
}
<div>
    <div style="text-align: center; width:100% ">
        <h2>Complains</h2>
    </div>
    <div align="center" style=" overflow-x: auto;width:100%">
        <table style="margin-left: auto; margin-right: auto; " id="ComplainJqGridTable"></table>
        <div id="ComplainJqGridPager"></div>
    </div>

    <br />

    <div align="center" style=" overflow-x: auto;width:100%">
        <table style="margin-left: auto; margin-right: auto; " id="ComplainIssueJqGridTable"></table>
        <div id="ComplainIssueJqGridPager"></div>
    </div>

</div>
<style>
    tr.jqgrow td {
        padding: 2px !important;
    }

    span.cellWithoutBackground {
        display: block;
        background-image: none;
        margin-right: -1px;
        margin-left: -1px;
    }
</style>

@section scripts{
    <script>

        var jqGridId = "#ComplainJqGridTable";
        var pagerId = "#ComplainJqGridPager";
        var controller = "Complain";
        var baseUrl = "/" + controller;

        var complainIssueJqGridId = "#ComplainIssueJqGridTable";
        var complainIssuePagerId = "#ComplainIssueJqGridPager";
        var complainIssueController = "Complain";
        var complainIssueBaseUrl = "/" + complainIssueController;

        $(document).ready(function() {

            $(jqGridId).jqGrid({
                url: baseUrl + "/ComplainsOfCompany",
                colModel: colModel,
                pager: pagerId,
                gridComplete: function() { setMaxHeightForElement(jqGridId); },
                shrinkToFit: false,
                width: 900,
                onSelectRow: function(rowId) {
                    if (rowId != null) {
                        var data = GetSelectedRowData($(jqGridId));
                        $(complainIssueJqGridId).jqGrid('setGridParam',
                            {
                                url: complainIssueBaseUrl + "/IssuesOfComplain?idComplain=" + data.Id
                            });
                        $(complainIssueJqGridId).trigger("reloadGrid");
                    }
                }
            });

            $(jqGridId).navGrid(
                pagerId,
                navgridOptions,
                editModalOptions,
                createModalOptions,
                deleteModalOptions,
                searchModalOptions,
                viewModalOptions
            );

            $(jqGridId).jqGrid("filterToolbar",
                {
                    stringResult: true,
                    searchOperators: true
                }
            );

            //

        $(complainIssueJqGridId).jqGrid({
            url: complainIssueBaseUrl + "/Empty",
            colModel: complainIssueColModel,
            pager: complainIssuePagerId,
            gridComplete: function() { setMaxHeightForElement(complainIssueJqGridId); },
            width: 900,
            shrinkToFit: true,
            sortable: false,
            onSelectRow: function(rowId) {
                @{
                    if (User.IsInRole(CustomRoles.Customer))
                    {<text>
                        var issueStatus = GetSelectedRowData($(complainIssueJqGridId)).IssueStatus;
                        if (issueStatus != "Open")
                        {
                            disableDelete($(complainIssueJqGridId));
                            disableEdit($(complainIssueJqGridId));
                        }
                        else
                        {
                            enableDelete($(complainIssueJqGridId));
                            enableEdit($(complainIssueJqGridId));
                        }

                    </text>

                    }
                }
                
            }
        });

        $(complainIssueJqGridId).navGrid(
            complainIssuePagerId,
            complainIssueNavgridOptions,
            complainIssueEditModalOptions,
            complainIssueCreateModalOptions,
            complainIssueDeleteModalOptions,
            complainIssueSearchModalOptions,
            complainIssueViewModalOptions
        );

        //$(complainIssueJqGridId).jqGrid("filterToolbar",
        //    {
        //        stringResult: true,
        //        searchOperators: true
        //    }
        //);

    });

        const width = 300;

        const navgridOptions = { view: false };

        const createModalOptions = {
            url: baseUrl + "/AjaxCreate",
            beforeShowForm: function() {},
            width: width
        };

        const editModalOptions = {
            url: baseUrl + "/AjaxUpdate",
            width: width,
            beforeShowForm: function() {
                var idComplain = GetSelectedRowData($(jqGridId)).Id;
                $.ajax({
                    url: "/Complain/GetEditSelectValues",
                    data: { idComplain: idComplain},
                    success: function(result) {
                        console.log(result);
                        populateStateAndSelectValue(result.IdState);
                        populateRegionAndSelectValue(result.IdState, result.IdRegion);
                        populateLocationAndSelectValue(result.IdRegion, result.IdLocation);
                        populateBranchAndSelectValue(result.IdLocation, result.IdBranch);
                        populateCompanyBranchAndSelectValue(result.IdBranch, result.IdCompanyBranch);
                    }
                });
            }

        };

        const deleteModalOptions = {
            url: baseUrl + "/AjaxDelete"
        };

        const searchModalOptions = {};

        const viewModalOptions = {
            width: width
        };

        function populateStateAndSelectValue(idState) {
            $.ajax({
                url: "/Complain/StateSelectOptions",
                success: function(result) {
                    var options = removeSelectTag(result);
                    $("#IdState").html(options);
                    $("#IdState").val(idState);
                }
            });
        }

        function populateRegionAndSelectValue(idState, idRegion) {
            $.ajax({
                url: "/Complain/RegionSelectOptions",
                data: { idState: idState },
                success: function(result) {
                    var options = removeSelectTag(result);
                    $("#IdRegion").html(options);
                    $("#IdRegion").val(idRegion);

                }
            });
        }

        function populateLocationAndSelectValue(idRegion, idLocation) {
            $.ajax({
                url: "/Complain/LocationSelectOptions",
                data: { idRegion: idRegion },
                success: function(result) {
                    var options = removeSelectTag(result);
                    $("#IdLocation").html(options);
                    $("#IdLocation").val(idLocation);
                }
            });
        }

        function populateBranchAndSelectValue(idLocation, idBranch) {
            $.ajax({
                url: "/Complain/BranchSelectOptions",
                data: { idLocation: idLocation },
                success: function(result) {
                    var options = removeSelectTag(result);
                    $("#IdBranch").html(options);
                    $("#IdBranch").val(idBranch);
                }
            });
        }

        function populateCompanyBranchAndSelectValue(idBranch, idCompanyBranch) {
            $.ajax({
                url: "/Complain/CompanyBranchSelectOptions",
                data: { idBranch: idBranch },
                success: function (result) {
                    var options = removeSelectTag(result);
                    $("#IdCompanyBranch").html(options);
                    $("#IdCompanyBranch").val(idCompanyBranch);
                }
            });
        }
        //
        const State = {
            name: "IdState",
            label: "State",
            template: SelectForCreateOrUpdate,
            editoptions: {
                dataUrl: "/Complain/StateSelectOptions",
                dataInit: function(elem) {
                    $(elem).attr('id', 'IdState');
                },
                dataEvents: [
                    {
                        type: 'change',
                        fn: function(e) {
                            var idState = e.target.value;
                            if (idState) {
                                $.ajax({
                                    url: "/Complain/RegionSelectOptions",
                                    data: { idState: idState },
                                    success: function(result) {
                                        var options = removeSelectTag(result);
                                        $("#IdRegion").html(options);
                                        $("#IdLocation").html("<option>-</option>");
                                        $("#IdBranch").html("<option>-</option>");
                                        $("#IdCompanyBranch").html("<option>-</option>");
                                    }
                                });
                            } else {
                                $("#IdRegion").html("<option>-</option>");
                                $("#IdLocation").html("<option>-</option>");
                                $("#IdBranch").html("<option>-</option>");
                                $("#IdCompanyBranch").html("<option>-</option>");
                            }
                        }
                    }
                ]
            }
        };

        const Region = {
            name: "IdRegion",
            label: "Region",
            template: SelectForCreateOrUpdate,
            editoptions: {
                dataUrl: "/Complain/Empty",
                dataInit: function(elem) {
                    $(elem).attr('id', 'IdRegion');
                },
                dataEvents: [
                    {
                        type: 'change',
                        fn: function(e) {
                            var idRegion = e.target.value;
                            if (idRegion) {
                                $.ajax({
                                    url: "/Complain/LocationSelectOptions",
                                    data: { idRegion: idRegion },
                                    success: function(result) {
                                        var options = removeSelectTag(result);
                                        $("#IdLocation").html(options);
                                        $("#IdBranch").html("<option>-</option>");
                                        $("#IdCompanyBranch").html("<option>-</option>");
                                    }
                                });
                            } else {
                                $("#IdLocation").html("<option>-</option>");
                                $("#IdBranch").html("<option>-</option>");
                                $("#IdCompanyBranch").html("<option>-</option>");
                            }
                        }
                    }
                ]
            }
        };

        const Location = {
            name: "IdLocation",
            label: "Location",
            template: SelectForCreateOrUpdate,
            editoptions: {
                dataUrl: "/Complain/Empty",
                dataInit: function(elem) {
                    $(elem).attr('id', 'IdLocation');
                },
                dataEvents: [
                    {
                        type: 'change',
                        fn: function(e) {
                            var idLocation = e.target.value;
                            if (idLocation) {
                                $.ajax({
                                    url: "/Complain/BranchSelectOptions",
                                    data: { idLocation: idLocation },
                                    success: function(result) {
                                        var options = removeSelectTag(result);
                                        $("#IdBranch").html(options);
                                        $("#IdCompanyBranch").html("<option>-</option>");
                                    }
                                });
                            } else {
                                $("#IdBranch").html("<option>-</option>");
                                $("#IdCompanyBranch").html("<option>-</option>");
                            }
                        }
                    }
                ]
            }
        };

        const Branch = {
            name: "IdBranch",
            label: "Branch",
            template: SelectForCreateOrUpdate,
            editoptions: {
                dataUrl: "/Company/Empty",
                dataInit: function(elem) {
                    $(elem).attr('id', 'IdBranch');
                },
                dataEvents: [
                    {
                        type: 'change',
                        fn: function(e) {
                            var idBranch = e.target.value;
                            if (idBranch) {
                                $.ajax({
                                    url: "/Complain/CompanyBranchSelectOptions",
                                    data: { idBranch: idBranch },
                                    success: function(result) {
                                        var options = removeSelectTag(result);
                                        $("#IdCompanyBranch").html(options);
                                    }
                                });
                            } else {
                                $("#IdCompanyBranch").html("<option>-</option>");
                            }
                        }
                    }
                ]
            }
        };

        //

        const Id = {
            name: "Id",
            template: primaryKeyColumn,
        };

        const IdTypeOfComplain = {
            name: "IdTypeOfComplain",
            label: "Complain Type",
            template: SelectForCreateOrUpdate,
            editoptions: {
                dataUrl: "/Complain/TypeOfComplainSelectOptions"
            }
        };

        const TypeOfComplain = {
            name: "TypeOfComplain",
            label: "Complain Type",
            template: textColumn,
            editable: false,
            width: 150,
            minResizeWidth: 150
        };

        const IdCompanyBranch = {
            name: "IdCompanyBranch",
            label: "Company Branch",
            template: SelectForCreateOrUpdate,
            editoptions: {
                dataUrl: "/Complain/Empty"
            }
        };

        const CompanyBranch = {
            name: "CompanyBranch",
            label: "Address",
            template: textColumn,
            editable: false,
            width: 150,
            minResizeWidth: 150
        };

        const Company = {
            name: "Company",
            label: "Company",
            template: textColumn,
            width: 150,
            minResizeWidth: 150,
            editable: false
        };

        const Status = {
            name: "Status",
            label: "Status",
            template: textColumn,
            width: 150,
            minResizeWidth: 150,
            editable: false,
            formatter: function(cellvalue, options, rowObject) {
                if (cellvalue == "Open")
                    return '<span class="cellWithoutBackground" style="background-color:#FF6F6F">' +
                        cellvalue +
                        '</span>';

                return '<span>' + cellvalue + '</span>';
            },
        };

        const CustomerWhoRaisedIssue = {
            name: "CustomerWhoRaisedIssue",
            label: "Customer",
            template: textColumn,
            width: 200,
            minResizeWidth: 200,
            editable: false
        };

        const Aging = {
            name: "Aging",
            label: "Aging",
            template: textColumn,
            width: 150,
            minResizeWidth: 150
        };

        const Remark = {
            name: "Remark",
            label: "Remark",
            template: textAreaColumn,
            width: 200,
            minResizeWidth: 200,
            editoptions: { maxlength: 1000 },
            editrules: { required: false },
        };

        const RequstedDate = {
            name: "RequstedDate",
            label: "Requsted Date",
            template: dateColumn,
            editable: false
        };

        const ClosingDate = {
            name: "ClosingDate",
            label: "Closing Date",
            template: dateColumn,
        };

        const colModel = [
            Id,
            Status,
            State, Region, Location, Branch,
            IdCompanyBranch, CompanyBranch,
            IdTypeOfComplain, TypeOfComplain,
            Company,
            //ClosingDate,
            Aging,
            Remark,
            CustomerWhoRaisedIssue,
            RequstedDate,
        ];

        //ISSUES

        const complainIssueNavgridOptions = { view: false };

        const complainIssueCreateModalOptions = {
            url: baseUrl + "/CreateComplainIssue",
            width: width,
            beforeSubmit: function(postData) {
                postData.IdComplain = GetSelectedRowData($(jqGridId)).Id;
                return [true, ""];
            },
        };

        const complainIssueEditModalOptions = {
            url: baseUrl + "/UpdateComplainIssue",
            width: width,
            beforeSubmit: function(postData) {
                postData.IdComplain = GetSelectedRowData($(jqGridId)).Id;
                return [true, ""];
            },
            afterSubmit: function (response, postdata) {

                $.ajax({
                    url: "/Complain/GetRefreshedStatusForComplain?idComplain="+GetSelectedRowData($(jqGridId)).Id,
                    success: function(result) {
                        var rowData = GetSelectedRowData($(jqGridId));
                        rowData.Status = result;
                        $(jqGridId).jqGrid('setRowData', rowData.Id, rowData);
                    }
                });
                return [""];
            }
        };

        const complainIssueDeleteModalOptions = {
            url: baseUrl + "/DeleteComplainIssue"
        };

        const complainIssueSearchModalOptions = {};

        const complainIssueViewModalOptions = {
            width: width
        };

        const Subject = {
            name: "Subject",
            label: "Subject",
            template: textAreaColumn,
            width: 200,
            minResizeWidth: 200,
            editoptions: { maxlength: 200 },
        };

        const Description = {
            name: "Description",
            label: "Description",
            template: textAreaColumn,
            width: 300,
            minResizeWidth: 300,
            editoptions: { maxlength: 1000 },
            editrules: { required: false },
        };

        const IdIssueStatus = {
            name: "IdIssueStatus",
            label: "Issue Status",
            template: SelectForCreateOrUpdate,
            editoptions: {
                dataUrl: "/Complain/IssueStatusSelectOptions"
            },
            
            @{
                if (User.IsInRole(CustomRoles.Customer))
                {
                    <text>editable:false,</text>
                }
            }
        };

        const IssueStatus = {
            name: "IssueStatus",
            label: "Issue Status",
            template: textColumn,
            editable: false,
            width: 150,
            minResizeWidth: 150,
            formatter: function (cellvalue, options, rowObject) {
                if (cellvalue == "Open")
                    return '<span class="cellWithoutBackground" style="background-color:#FF6F6F">' +
                        cellvalue +
                        '</span>';

                return '<span>' + cellvalue + '</span>';
            },
        };

        const DateFixed = {
            name: "DateFixed",
            label: "DateFixed",
            template: dateColumn,
            width: 150,
            minResizeWidth: 150,
            editrules: { required: false },
            @{
                if (User.IsInRole(CustomRoles.Customer))
                {
                    <text>editable:false,</text>
                }
            }
        };

        //const IdComplain = {
        //    name: "IdComplain",
        //    label: "Complain",
        //    template: textColumn,
        //    editable: false,
        //    width: 150,
        //    minResizeWidth: 150
        //};

        const Actions = {
            name: "Details",
            label: "Details",
            formatter: function(cellvalue, option, rowObject) {
                return '<button style="margin-right:2px;" title="Regions" onClick="details();" class="btn-xsm btn-info"><span class="glyphicon glyphicon-tasks" style="font-size:12px"></span></button>';
            },
            editable: false,
            search: false,
            colmenu: false,
            sortable: false,
            fixed: true,
            align: 'center',
            resizable: false,
            width: 80,
            viewable: false
        };

        function details() {
            setTimeout(function() {
                var selectedRowData = GetSelectedRowData($(complainIssueJqGridId));
                window.location.href = "/Complain/ComplainIssueDetails?IdComplainIssue=" + selectedRowData.Id;
            });
        }

        const complainIssueColModel = [
            Id,
            Subject,
            Description,
            IssueStatus, IdIssueStatus,
            DateFixed,
            @{
                if (!User.IsInRole(CustomRoles.Customer))
                {
                    <text>Actions</text>
                }
            }

        ];

    </script>
}

